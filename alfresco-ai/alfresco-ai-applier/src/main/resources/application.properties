# Spring Boot properties
# Disable Spring Boot banner
spring.main.banner-mode=off

# Logging Configuration
logging.level.org.springframework=ERROR
logging.level.org.alfresco=DEBUG
logging.pattern.console=%msg%n

# Alfresco Server Configuration
# Basic authentication credentials for Alfresco Server
content.service.security.basicAuth.username=admin
content.service.security.basicAuth.password=admin
# URL and path for Alfresco Server API
content.service.url=http://localhost:8080
content.service.path=/alfresco/api/-default-/public/alfresco/versions/1

# Alfresco Repository Content Model (Summary)
# Aspect that triggers the summarization task
content.service.summary.aspect=genai:summarizable
# Node property to store the summary obtained from GenAI Stack
content.service.summary.summary.property=genai:summary
# Node property to store tags obtained from GenAI Stack; use TAG as a value to use a tag instead of a property
content.service.summary.tags.property=genai:tags
# Node property to store the Large Language Model (LLM) used; use TAG as a value to use a tag instead of a property
content.service.summary.model.property=genai:llmSummary

# Alfresco Repository Content Model (Classify)
# Aspect storing possible terms for classification
content.service.classifiable.aspect=genai:classifiable
# Node property that includes terms for classification
content.service.classify.terms.property=genai:terms
# Aspect that enables classification task
content.service.classify.aspect=genai:classified
# Node property to fill with the term
content.service.classify.term.property=genai:term
# Node property to fill with the model
content.service.classify.model.property=genai:llmClassify

# Alfresco Repository Content Model (Description)
# Aspect that triggers the description task
content.service.description.aspect=genai:descriptable
# Node property to store the description obtained from GenAI Stack
content.service.description.description.property=genai:description
# Node property to store the Large Language Model (LLM) used; use TAG as a value to use a tag instead of a property
content.service.description.model.property=genai:llmDescription

# Alfresco Repository Content Model (Wikdata Entity Linking)
# Aspect that triggers the Wikidata entity linking task
content.service.entitylinks-wikidata.aspect=genai:entitylinks-wikidata
# Node property to store the Wikidata entity links data from spaCy
content.service.entitylinks-wikidata.labelsWikidata.property=genai:labelsWikidata
content.service.entitylinks-wikidata.linksWikidata.property=genai:linksWikidata
content.service.entitylinks-wikidata.typelistsWikidata.property=genai:typelistsWikidata

# Alfresco Repository Content Model (DBpedia Entity Linking)
# Aspect that triggers the DBPedia entity linking task
content.service.entitylinks-dbpedia.aspect=genai:entitylinks-dbpedia
# Node property to store the DBpedia entity links data from spaCy
content.service.entitylinks-dbpedia.labelsDBpedia.property=genai:labelsDBpedia
content.service.entitylinks-dbpedia.linksDBpedia.property=genai:linksDBpedia
content.service.entitylinks-dbpedia.typelistsDBpedia.property=genai:typelistsDBpedia


# GenAI Client Configuration
# Host URL for the Document GenAI service
genai.url=http://localhost:8506
# Request timeout in seconds for GenAI service requests
genai.request.timeout=1200

# Alfresco AI Applier Configuration
# Root folder in Alfresco Repository to apply GenAI action
applier.root.folder=/app:company_home/app:shared
# Choose one action: SUMMARY, CLASSIFY, DESCRIBE, ENTITYLINKWIKIDATA, ENTITYLINKDBPEDIA
applier.action=SUMMARY
# List of terms to be applied for CLASSIFY action (ignored when using SUMMARY action)
applier.action.classify.term.list=English,Spanish,Japanese,Vietnamese
# Maximum number of items to be retrieved from Alfresco Repository in each iteration
request.max.items=20
